import React, { useEffect, useState, useMemo } from "react";
import { useAuth } from "../context/AuthContext";
import { useAssignment } from "../context/AssignmentContext";
import { Link } from "react-router-dom";
import Modal from "../components/Modal";
import Assignments from "./Assignments";
import { Menu, Bed, Bell, Users, LayoutDashboard } from "lucide-react";

const Dashboard = () => {
Â  const { user } = useAuth();
Â  const [open, setOpen] = useState(false);
Â  const [forceRequired, setForceRequired] = useState(false);
Â  const [updateAssign, setUpdateAssign] = useState(false);
Â  const { expiry, deptExpiry, wardExpiry, loading, fetchExpiry } = useAssignment();

Â  const hasExpiredAssignment = useMemo(() => {
Â  Â  if (!expiry) return false;
Â  Â  const today = new Date().toLocaleDateString('en-CA');
Â  Â  const deptExpired = deptExpiry && today >= deptExpiry;
Â  Â  const wardExpired = wardExpiry && today >= wardExpiry;
Â  Â  return deptExpired || wardExpired;
Â  }, [expiry, deptExpiry, wardExpiry]);
Â  
Â  useEffect(() => {
Â  Â  if (!loading && user) {
Â  Â  Â  const isFirstLogin = !user.firstLoginDone;
Â  Â  Â  if (isFirstLogin || hasExpiredAssignment) {
Â  Â  Â  Â  setOpen(true);
Â  Â  Â  Â  setForceRequired(true);
Â  Â  Â  } else {
Â  Â  Â  Â  setForceRequired(false);
Â  Â  Â  }
Â  Â  }
Â  }, [loading, user, hasExpiredAssignment]);

Â  useEffect(() => {
Â  Â  const interval = setInterval(() => {
Â  Â  Â  if (user) fetchExpiry();
Â  Â  }, 60 * 1000);
Â  Â  return () => clearInterval(interval);
Â  }, [user, fetchExpiry]);

Â  if (!user) {
Â  Â  return (
Â  Â  Â  <div className="min-h-screen bg-gray-100 flex items-center justify-center p-4">
Â  Â  Â  Â  <div className="text-center p-8 bg-white rounded-xl shadow-2xl">
Â  Â  Â  Â  Â  <div className="text-6xl mb-4 animate-bounce">ðŸ‘‹</div>
Â  Â  Â  Â  Â  <h2 className="text-3xl font-bold text-gray-800 mb-2">
Â  Â  Â  Â  Â  Â  Access Denied
Â  Â  Â  Â  Â  </h2>
Â  Â  Â  Â  Â  <p className="text-lg text-gray-600 mb-6">
Â  Â  Â  Â  Â  Â  Please log in to view this page.
Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  Â  <Link
Â  Â  Â  Â  Â  Â  to="/login"
Â  Â  Â  Â  Â  Â  className="inline-block px-8 py-3 text-white bg-indigo-600 hover:bg-indigo-700 transition duration-300 rounded-full shadow-lg transform hover:scale-105"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Go to Login
Â  Â  Â  Â  Â  </Link>
Â  Â  Â  Â  </div>
Â  Â  Â  </div>
Â  Â  );
Â  }

Â  return (
Â  Â  <div className="bg-gray-50 min-h-screen p-8">
Â  Â  Â  <div className="max-w-6xl mx-auto">
Â  Â  Â  Â  <div className="text-center mb-12">
Â  Â  Â  Â  Â  <h1 className="text-5xl font-extrabold text-gray-900 leading-tight">
Â  Â  Â  Â  Â  Â  Hello, <span className="text-indigo-600">{user.name}</span>!
Â  Â  Â  Â  Â  </h1>
Â  Â  Â  Â  Â  <p className="text-xl text-gray-600 mt-2">
Â  Â  Â  Â  Â  Â  Your role: <span className="font-semibold text-gray-800">{user.role}</span>
Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  </div>

Â  Â  Â  Â  {/* Dashboard Quick Actions */}
Â  Â  Â  Â  <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
Â  Â  Â  Â  Â  {/* Beds Card */}
Â  Â  Â  Â  Â  <Link
Â  Â  Â  Â  Â  Â  to="/beds"
Â  Â  Â  Â  Â  Â  className="dashboard-card group bg-white hover:bg-green-100 border-l-4 border-green-500 hover:border-green-600 transition-all duration-300"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  <div className="bg-green-100 group-hover:bg-green-200 p-4 rounded-full inline-block transition-colors duration-300">
Â  Â  Â  Â  Â  Â  Â  <Bed size={32} className="text-green-600" />
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  <h3 className="text-xl font-bold text-gray-800 group-hover:text-green-800 mt-4">Manage Beds</h3>
Â  Â  Â  Â  Â  Â  <p className="text-sm text-gray-500 group-hover:text-green-700">Browse and assign beds.</p>
Â  Â  Â  Â  Â  </Link>

Â  Â  Â  Â  Â  {/* Notifications Card */}
Â  Â  Â  Â  Â  <Link
Â  Â  Â  Â  Â  Â  to="/notifications"
Â  Â  Â  Â  Â  Â  className="dashboard-card group bg-white hover:bg-yellow-100 border-l-4 border-yellow-500 hover:border-yellow-600 transition-all duration-300"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  <div className="bg-yellow-100 group-hover:bg-yellow-200 p-4 rounded-full inline-block transition-colors duration-300">
Â  Â  Â  Â  Â  Â  Â  <Bell size={32} className="text-yellow-600" />
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  <h3 className="text-xl font-bold text-gray-800 group-hover:text-yellow-800 mt-4">View Notifications</h3>
Â  Â  Â  Â  Â  Â  <p className="text-sm text-gray-500 group-hover:text-yellow-700">Check for new admissions.</p>
Â  Â  Â  Â  Â  </Link>

Â  Â  Â  Â  Â  {/* My Assignments Card */}
Â  Â  Â  Â  Â  <Link
Â  Â  Â  Â  Â  Â  to="/myassignments"
Â  Â  Â  Â  Â  Â  className="dashboard-card group bg-white hover:bg-blue-100 border-l-4 border-blue-500 hover:border-blue-600 transition-all duration-300"
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  <div className="bg-blue-100 group-hover:bg-blue-200 p-4 rounded-full inline-block transition-colors duration-300">
Â  Â  Â  Â  Â  Â  Â  <LayoutDashboard size={32} className="text-blue-600" />
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  <h3 className="text-xl font-bold text-gray-800 group-hover:text-blue-800 mt-4">My Assignments</h3>
Â  Â  Â  Â  Â  Â  <p className="text-sm text-gray-500 group-hover:text-blue-700">View beds assigned to you.</p>
Â  Â  Â  Â  Â  </Link>

Â  Â  Â  Â  Â  {/* Admin Access Card */}
Â  Â  Â  Â  Â  {user.role === "admin" && (
Â  Â  Â  Â  Â  Â  <Link
Â  Â  Â  Â  Â  Â  Â  to="/admin"
Â  Â  Â  Â  Â  Â  Â  className="dashboard-card group bg-white hover:bg-purple-100 border-l-4 border-purple-500 hover:border-purple-600 transition-all duration-300"
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  <div className="bg-purple-100 group-hover:bg-purple-200 p-4 rounded-full inline-block transition-colors duration-300">
Â  Â  Â  Â  Â  Â  Â  Â  <Users size={32} className="text-purple-600" />
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  <h3 className="text-xl font-bold text-gray-800 group-hover:text-purple-800 mt-4">Admin Panel</h3>
Â  Â  Â  Â  Â  Â  Â  <p className="text-sm text-gray-500 group-hover:text-purple-700">Manage all system users.</p>
Â  Â  Â  Â  Â  Â  </Link>
Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  </div>
Â  Â  Â  </div>

Â  Â  Â  <button
Â  Â  Â  Â  onClick={() => {
Â  Â  Â  Â  Â  setOpen(true);
Â  Â  Â  Â  Â  setUpdateAssign(!updateAssign);
Â  Â  Â  Â  }}
Â  Â  Â  Â  className="cursor-pointer fixed bottom-6 right-6 z-50 p-4 bg-indigo-600 text-white rounded-full shadow-lg transition-all duration-300 hover:bg-indigo-700 hover:scale-110 lg:hidden"
Â  Â  Â  Â  aria-label="Open Assignments Menu"
Â  Â  Â  >
Â  Â  Â  Â  <Menu size={24} />
Â  Â  Â  </button>

Â  Â  Â  {/* Modal */}
Â  Â  Â  <Modal
Â  Â  Â  Â  isOpen={open}
Â  Â  Â  Â  onClose={() => setOpen(false)}
Â  Â  Â  Â  forceRequired={forceRequired}
Â  Â  Â  Â  updateAssign={updateAssign}
Â  Â  Â  >
Â  Â  Â  Â  <Assignments 
Â  Â  Â  Â  Â  updateAssign={updateAssign}
Â  Â  Â  Â  Â  closeModal={() => setOpen(false)} />
Â  Â  Â  </Modal>
Â  Â  </div>
Â  );
};

export default Dashboard;