import React, { useState } from "react";
import { useAdmin } from "../context/AdminContext";
import ConfirmModal from "../components/ConfirmModal";
import { useAuth } from "../context/AuthContext";
import GoBack from '../components/GoBack'; // <-- Added GoBack component
import { Users, Hospital, Stethoscope, Bed } from 'lucide-react';

const Admin = () => {
Â  const {
Â  Â  stats,
Â  Â  departments,
Â  Â  users,
Â  Â  loading,
Â  Â  addWard,
Â  Â  removeWard,
Â  Â  addBed,
Â  Â  removeBed,
Â  Â  assignments,
Â  } = useAdmin();

Â  const { user } = useAuth();

Â  const [tab, setTab] = useState("departments");
Â  const [selectedDept, setSelectedDept] = useState(null);
Â  const [selectedWard, setSelectedWard] = useState(null);
Â  const [newWardName, setNewWardName] = useState("");
Â  const [newBedId, setNewBedId] = useState("");

Â  // Confirmation modal state
Â  const [confirmOpen, setConfirmOpen] = useState(false);
Â  const [confirmData, setConfirmData] = useState({});

Â  if (loading) return <p className="p-8 text-center text-xl font-medium text-gray-700 animate-pulse">Loading...</p>;

Â  const openConfirm = (title, message, onConfirm) => {
Â  Â  setConfirmData({ title, message, onConfirm });
Â  Â  setConfirmOpen(true);
Â  };

Â  return (
Â  Â  <div className="p-8 max-w-6xl mx-auto min-h-screen bg-gray-50">
Â  Â  Â  <GoBack />
Â  Â  Â  <h1 className="text-4xl font-extrabold text-gray-900 mb-6">Admin Panel</h1>

Â  Â  Â  {/* Tabs */}
Â  Â  Â  <div className="flex space-x-2 sm:space-x-4 mb-8 border-b border-gray-200">
Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  onClick={() => setTab("departments")}
Â  Â  Â  Â  Â  className={`flex items-center space-x-2 px-4 py-3 rounded-t-lg font-semibold transition-colors duration-200 ${
Â  Â  Â  Â  Â  Â  tab === "departments" ? "bg-indigo-600 text-white shadow-md" : "text-gray-600 hover:bg-gray-200"
Â  Â  Â  Â  Â  }`}
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  <Hospital size={20} />
Â  Â  Â  Â  Â  <span>Departments & Wards</span>
Â  Â  Â  Â  </button>
Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  onClick={() => setTab("users")}
Â  Â  Â  Â  Â  className={`flex items-center space-x-2 px-4 py-3 rounded-t-lg font-semibold transition-colors duration-200 ${
Â  Â  Â  Â  Â  Â  tab === "users" ? "bg-indigo-600 text-white shadow-md" : "text-gray-600 hover:bg-gray-200"
Â  Â  Â  Â  Â  }`}
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  <Users size={20} />
Â  Â  Â  Â  Â  <span>Users</span>
Â  Â  Â  Â  </button>
Â  Â  Â  </div>

Â  Â  Â  {/* System Stats */}
Â  Â  Â  {stats && (
Â  Â  Â  Â  <div className="mb-8 bg-white shadow-lg p-6 rounded-xl border border-gray-200">
Â  Â  Â  Â  Â  <h2 className="text-2xl font-bold mb-4 flex items-center space-x-2 text-gray-800">ðŸ“Š System Stats</h2>
Â  Â  Â  Â  Â  <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
Â  Â  Â  Â  Â  Â  <div className="bg-gray-100 p-4 rounded-lg flex items-center space-x-3">
Â  Â  Â  Â  Â  Â  Â  <Users className="text-blue-500" size={24} />
Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-sm text-gray-500">Total Users</p>
Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-xl font-bold">{stats.totalUsers}</p>
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  <div className="bg-gray-100 p-4 rounded-lg flex items-center space-x-3">
Â  Â  Â  Â  Â  Â  Â  <Hospital className="text-purple-500" size={24} />
Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-sm text-gray-500">Total Departments</p>
Â  Â  Â  Â  Â  Â  Â  Â  <p className="text-xl font-bold">{stats.totalDepartments}</p>
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  <div className="bg-gray-100 p-4 rounded-lg">
Â  Â  Â  Â  Â  Â  Â  <p className="text-sm text-gray-500">Beds</p>
Â  Â  Â  Â  Â  Â  Â  <div className="flex space-x-4 mt-2">
Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex items-center space-x-1">
Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="bg-red-500 rounded-full w-3 h-3 block"></span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="text-sm">Occupied: {stats.beds.occupied}</span>
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex items-center space-x-1">
Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="bg-green-500 rounded-full w-3 h-3 block"></span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="text-sm">Available: {stats.beds.available}</span>
Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  Â  )}

Â  Â  Â  {/* Tab Content */}
Â  Â  Â  <div className="mt-8">
Â  Â  Â  Â  {/* ========== TAB: DEPARTMENTS ========== */}
Â  Â  Â  Â  {tab === "departments" && (
Â  Â  Â  Â  Â  <div className="bg-white shadow-lg p-6 rounded-xl border border-gray-200">
Â  Â  Â  Â  Â  Â  {/* Department selection */}
Â  Â  Â  Â  Â  Â  <div className="mb-6">
Â  Â  Â  Â  Â  Â  Â  <label className="block font-semibold text-lg mb-2 text-gray-700">Select Department</label>
Â  Â  Â  Â  Â  Â  Â  <select
Â  Â  Â  Â  Â  Â  Â  Â  value={selectedDept?._id || ""}
Â  Â  Â  Â  Â  Â  Â  Â  onChange={(e) => {
Â  Â  Â  Â  Â  Â  Â  Â  Â  const dept = departments.find((d) => d._id === e.target.value);
Â  Â  Â  Â  Â  Â  Â  Â  Â  setSelectedDept(dept);
Â  Â  Â  Â  Â  Â  Â  Â  Â  setSelectedWard(null);
Â  Â  Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  Â  Â  className="border border-gray-300 p-2 rounded-lg w-full focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  <option value="">-- Select Department --</option>
Â  Â  Â  Â  Â  Â  Â  Â  {departments.map((dept) => (
Â  Â  Â  Â  Â  Â  Â  Â  Â  <option key={dept._id} value={dept._id}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {dept.name}
Â  Â  Â  Â  Â  Â  Â  Â  Â  </option>
Â  Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  Â  </select>
Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  {selectedDept && (
Â  Â  Â  Â  Â  Â  Â  <>
Â  Â  Â  Â  Â  Â  Â  Â  {/* Wards of selected department */}
Â  Â  Â  Â  Â  Â  Â  Â  <div className="mb-6">
Â  Â  Â  Â  Â  Â  Â  Â  Â  <h3 className="text-xl font-bold mb-3 text-gray-800">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Wards in {selectedDept.name}
Â  Â  Â  Â  Â  Â  Â  Â  Â  </h3>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <ul className="space-y-3">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {selectedDept.wards.map((ward) => (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <li
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  key={ward.name}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`p-4 rounded-lg flex justify-between items-center transition-all duration-200 ${
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  selectedWard?.name === ward.name ? "bg-indigo-100 border-2 border-indigo-400" : "bg-gray-50 border border-gray-200 hover:bg-gray-100"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }`}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="font-semibold text-gray-700">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {ward.name} ({ward.beds.length} beds)
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="space-x-2 flex">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => setSelectedWard(ward)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="cp bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Manage Beds
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() =>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  openConfirm(
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  "Remove Ward",
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  `Are you sure you want to remove ward "${ward.name}"?`,
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  () => removeWard(selectedDept._id, ward.name)
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  )
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="cp bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition-colors"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Remove
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </li>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  Â  Â  Â  </ul>

Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* Add new ward */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="mt-6 flex space-x-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  value={newWardName}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={(e) => setNewWardName(e.target.value)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="New ward name"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="border border-gray-300 p-2 rounded-lg flex-1 focus:ring-2 focus:ring-green-500 focus:border-green-500"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => {
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  if (newWardName.trim())
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  addWard(selectedDept._id, newWardName.trim());
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  setNewWardName("");
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="cp bg-green-600 text-white px-4 py-2 rounded-lg font-medium hover:bg-green-700"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Add Ward
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  {/* Beds in selected ward */}
Â  Â  Â  Â  Â  Â  Â  Â  {selectedWard && (
Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="mt-6">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <h3 className="text-xl font-bold mb-3 text-gray-800">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Beds in {selectedWard.name}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </h3>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <ul className="space-y-3">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex space-x-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  type="text"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  value={newBedId}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={(e) => setNewBedId(e.target.value)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="New bed ID"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="border border-gray-300 p-2 rounded-lg flex-1 focus:ring-2 focus:ring-green-500 focus:border-green-500"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => {
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  if (newBedId.trim())
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  addBed(
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  selectedDept._id,
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  selectedWard.name,
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  newBedId.trim()
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  );
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  setNewBedId("");
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="cp bg-green-600 text-white px-4 py-2 rounded-lg font-medium hover:bg-green-700"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Add Bed
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {selectedWard.beds.map((bed) => (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <li
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  key={bed.id}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="flex justify-between items-center p-4 bg-gray-50 rounded-lg border border-gray-200"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="font-semibold text-gray-700 flex items-center space-x-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Bed size={20} />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Bed ID: {bed.id}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className={`text-sm ml-2 font-medium px-2 py-1 rounded-full ${bed.status === 'occupied' ? 'bg-red-100 text-red-700' : 'bg-green-100 text-green-700'}`}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {bed.status}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() =>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  openConfirm(
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  "Remove Bed",
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  `Are you sure you want to remove bed "${bed.id}"?`,
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  () =>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  removeBed(
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  selectedDept._id,
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  selectedWard.name,
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  bed.id
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  )
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  )
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="cp bg-red-600 text-white px-4 py-2 rounded-md font-medium hover:bg-red-700"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Remove
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </li>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </ul>
Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  Â  </>
Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  )}

Â  Â  Â  Â  {/* ========== TAB: USERS ========== */}
Â  Â  Â  Â  {tab === "users" && (
Â  Â  Â  Â  Â  <div className="bg-white shadow-lg p-6 rounded-xl border border-gray-200">
Â  Â  Â  Â  Â  Â  <h2 className="text-xl font-bold mb-3 flex items-center space-x-2 text-gray-800"><Users size={24} /><span>All Users</span></h2>
Â  Â  Â  Â  Â  Â  <div className="overflow-x-auto">
Â  Â  Â  Â  Â  Â  Â  <table className="min-w-full divide-y divide-gray-200">
Â  Â  Â  Â  Â  Â  Â  Â  <thead className="bg-gray-50">
Â  Â  Â  Â  Â  Â  Â  Â  Â  <tr>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Name</th>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Email</th>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Role</th>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Assigned Beds</th>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <th className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase">Action</th>
Â  Â  Â  Â  Â  Â  Â  Â  Â  </tr>
Â  Â  Â  Â  Â  Â  Â  Â  </thead>
Â  Â  Â  Â  Â  Â  Â  Â  <tbody className="bg-white divide-y divide-gray-200">
Â  Â  Â  Â  Â  Â  Â  Â  Â  {users.map((u) => {
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  const userAssignments = assignments.filter(
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  (assign) => assign.createdBy === u._id
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  );

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  return (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <tr key={u._id} className="hover:bg-gray-50 transition-colors">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900 font-medium">{u.name}</td>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">{u.email}</td>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <td className="px-6 py-4 whitespace-nowrap">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {u.role}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </td>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {userAssignments.length > 0 ? (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <ul className="space-y-1">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {userAssignments.map((assign, idx) => (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <li key={idx} className="font-medium text-gray-700">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {assign.department.name} â€“ {assign.ward}: {assign.beds.length} beds
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </li>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </ul>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ) : (
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <span className="text-gray-400 italic">No beds</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </td>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <td className="px-6 py-4 whitespace-nowrap text-right">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() =>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  openConfirm(
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  "Delete User",
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  `Are you sure you want to delete user "${u.name}"?`,
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  () => console.log("TODO: deleteUser(u._id)")
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  )
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className="cp bg-red-600 text-white px-4 py-2 rounded-md font-medium hover:bg-red-700 transition-colors"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Delete
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </td>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </tr>
Â  Â  Â  Â  Â  Â  Â  Â  Â  );
Â  Â  Â  Â  Â  Â  Â  Â  })}
Â  Â  Â  Â  Â  Â  Â  </tbody>
Â  Â  Â  Â  Â  Â  </table>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  Â  Â  )}

Â  Â  Â  {/* Confirmation Modal */}
Â  Â  Â  <ConfirmModal
Â  Â  Â  Â  isOpen={confirmOpen}
Â  Â  Â  Â  title={confirmData.title}
Â  Â  Â  Â  message={confirmData.message}
Â  Â  Â  Â  onConfirm={confirmData.onConfirm}
Â  Â  Â  Â  onCancel={() => setConfirmOpen(false)}
Â  Â  Â  />
Â  Â  </div>
  </div>
Â  );
};

export default Admin;